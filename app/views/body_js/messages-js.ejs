<!-- Messages JavaScript -->
<script type="text/javascript">
$(function() {
  const debounceF = Object.assign(HelperToolsClass.debounceFirst);
  const btnDebounce = Object.assign(HelperToolsClass.btnDebounce);

  // -------------- Events delegation -------------
  class InputBox {
    constructor(elem) {
      this._elem = elem;
      elem.onclick = this.onClick.bind(this); // (*)
    }
    getMessages() {
      getMessagesAjax();
    }
    postMessage() {
      postOneMessageAjax();
    }
    onClick(event) {
      let action = event.target.dataset.action;
      if (action) {
        btnDebounce(event.target);
        this[action]();
      }
    };
  }
  new InputBox(input_box);

  // ------------------ Functions -----------------
  async function getMessagesAjax() {
    const res = await fetch(
      '/api/v1/messages',
      {
        method: "GET", // *GET, POST, PUT, DELETE, etc.
        mode: "same-origin", // no-cors, cors, *same-origin
        cache: "no-cache", // *default, no-cache, reload, force-cache, only-if-cached
        credentials: "same-origin", // include, same-origin, *omit
      }
    ).then(response => response.json());

    if(res.meta.result) {
      displayMessages(res.data);
    } else {
      alert(`Error ${res.code} : ${res.msg}`);
    }
  }

  function displayMessages(dataObj) {
    let msgsBox = document.querySelector('#msgs_box');
    msgsBox.innerHTML = '';
    dataObj.forEach(function(msg) {
      msgsBox.innerHTML += `
        <div class="row">
          <div class="col-sm-3 col-lg-2 text-right">
            <span>${msg.User.first_name} ${msg.User.last_name}</span><br>
            <span>MsgID: ${msg.id}</span>
          </div>
          <div class="col-sm-9 col-lg-10">
          <div class="alert alert-secondary" role="alert">${msg.content}</div>
          </div>
        </div>`;
    });
  }

  async function postOneMessageAjax() {
    let msginput = document.querySelector('#message_input') &&
      document.querySelector('#message_input').value;

    if(!msginput) {
      alert('Empty message or message not valid');
    } else {
      const res = await fetch(
        '/api/v1/message',
        {
          method: "POST", // *GET, POST, PUT, DELETE, etc.
          headers: {
            'Accept': 'application/json',
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            data: msginput
          })
        }
      ).then(response => response.json());

      console.log('post msg res ->', res);
    }
  }
});
</script>